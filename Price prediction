# Bitcoin Price  Prediction- Widhya project 1


#importing packages and class
import pandas
import numpy
import seaborn as sns
from sklearn.linear_model import LinearRegression
import matplotlib.pyplot as plt
from sklearn.metrics import mean_absolute_error
from sklearn.metrics import mean_squared_error
from sklearn.model_selection import train_test_split

#Uploading the csv file
File="https://raw.githubusercontent.com/WidhyaOrg/datasets/master/bitcoin_dataset.csv"
data=pandas.read_csv(File)

data.head()

data.tail()

data.describe()

#Calculating number of rows
print(len(data))

#Calculating number of columns
print(len(data.columns))

#Value of 1024th row at column btc_market_price
print(data.loc[1023,'btc_market_price'])

#Calculating the Nan value
data.isnull().sum()

#Calculating the corelation
corelation=data.corr()

print(corelation)

#Heat map 
sns.heatmap(corelation, xticklabels=corelation.columns, yticklabels=corelation.columns,annot=True)

#Filling the Nan value with mean
data=data.fillna(data.mean())

#checking the Nan value is filled
data.isnull().sum()

Y=data['btc_market_price']
X=data[['btc_market_cap','btc_n_transactions','btc_miners_revenue','btc_cost_per_transaction','btc_difficulty','btc_hash_rate','btc_cost_per_transaction_percent']]

#Performing Train Test Split method on the data
train_X,val_X,train_Y,val_Y=train_test_split(X,Y,test_size=0.2, random_state=0)

#Performing Linear Regression on the model and Fitting the model
linear_Regression=LinearRegression()
linear_Regression=linear_Regression.fit(train_X,train_Y)

#Predecting  the model
predict=linear_Regression.predict(val_X)
print("The predictions are")
print(predict)

#Calculating the Mean Absolute Error and Mean Square Error
MAE=mean_absolute_error(val_Y,predict)
MSE=mean_squared_error(val_Y,predict)
print(MAE)
print(MSE)
